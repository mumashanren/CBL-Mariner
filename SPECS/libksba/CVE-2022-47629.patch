diff -ru libksba-1.3.5/src/crl.c libksba-1.3.5-mod/src/crl.c
--- libksba-1.3.5/src/crl.c	2014-07-22 00:23:50.000000000 -0700
+++ libksba-1.3.5-mod/src/crl.c	2023-01-04 14:42:44.163003931 -0800
@@ -1434,7 +1434,7 @@
          && !ti.is_constructed) )
     return gpg_error (GPG_ERR_INV_CRL_OBJ);
   n2 = ti.nhdr + ti.length;
-  if (n + n2 >= DIM(tmpbuf))
+  if (n + n2 >= DIM(tmpbuf) || (n + n2) < n)
     return gpg_error (GPG_ERR_TOO_LARGE);
   memcpy (tmpbuf+n, ti.buf, ti.nhdr);
   err = read_buffer (crl->reader, tmpbuf+n+ti.nhdr, ti.length);
diff -ru libksba-1.3.5/src/ocsp.c libksba-1.3.5-mod/src/ocsp.c
--- libksba-1.3.5/src/ocsp.c	2016-08-22 01:40:58.000000000 -0700
+++ libksba-1.3.5-mod/src/ocsp.c	2023-01-04 14:39:11.085673400 -0800
@@ -912,6 +912,12 @@
           else
             ocsp->good_nonce = 1;
         }
+      if (ti.length > (1<<24))
+        {
+          /* Bail out on much too large objects.  */
+          err = gpg_error (GPG_ERR_BAD_BER);
+          goto leave;
+        }
       ex = xtrymalloc (sizeof *ex + strlen (oid) + ti.length);
       if (!ex)
         {
@@ -979,6 +985,12 @@
       err = parse_octet_string (&data, &datalen, &ti);
       if (err)
         goto leave;
+      if (ti.length > (1<<24))
+        {
+          /* Bail out on much too large objects.  */
+          err = gpg_error (GPG_ERR_BAD_BER);
+          goto leave;
+        }
       ex = xtrymalloc (sizeof *ex + strlen (oid) + ti.length);
       if (!ex)
         {
