From 2cda0befe7ef51e65bfdae7c18e89cdf6ab8a1ab Mon Sep 17 00:00:00 2001
From: Rachel Menge <rachelmenge@microsoft.com>
Date: Thu, 12 May 2022 15:26:54 -0700
Subject: [PATCH] Added the fix from the following commit:
 77e60a31497be20458a8a362375e473dbc459386

session: Validate client certificates against sssd's trusted CA
sssd 2.6.1 introduces a new FindByValidCertificate() method which
validates the given certificate against the configured CA. Use this API
if available, and fall back to FindByCertificate() to keep compatibility
with older distributions.

This enables OCSP/CRL checks, and enables certmap rules in a safe way.
Update TestLogin.testClientCertAuthentication() to adjust the scary
comments, and make sure that certificates without a valid CA are
rejected if the new API is available.

Similarly, adjust check-system-realms to tell sssd about a valid CA, and
test valid/invalid cases.

Update the client certificate docs to show how to set up the CA in sssd,
and adjust the warning: certmap rules are now actually okay with sssd
2.6.1.

https://bugzilla.redhat.com/show_bug.cgi?id=1992149
CVE-2021-3698
---
 doc/guide/cert-authentication.xml           | 27 ++++++++++++++++-----
 src/ws/cockpit-session-client-certificate.c | 20 ++++++++++++++-
 2 files changed, 40 insertions(+), 7 deletions(-)

diff --git a/doc/guide/cert-authentication.xml b/doc/guide/cert-authentication.xml
index 08d2d19..c76c4e1 100644
--- a/doc/guide/cert-authentication.xml
+++ b/doc/guide/cert-authentication.xml
@@ -131,6 +131,16 @@ maprule = LDAP:(userCertificate={cert!base64})
   <section id="certauth-server-cockpitconf">
     <title>Cockpit web server configuration</title>
 
+    <para>Set the trusted Certificate Authority of your user certificates in <command>sssd</command>,
+    either by copying the CA PEM file to <code>/etc/sssd/pki/sssd_auth_ca_db.pem</code> or setting the
+    <ulink url="https://www.mankier.com/5/sssd.conf#Services_Sections-PAM_configuration_options">
+    <command>pam_cert_db_path</command></ulink> configuration option to the path of the CA.
+    If you use FreeIPA and its CA:</para>
+
+<programlisting>
+cp /etc/ipa/ca.crt /etc/sssd/pki/sssd_auth_ca_db.pem
+</programlisting>
+
     <para>Certificate authentication needs to be enabled in
       <ulink url="./cockpit.conf.5.html">cockpit.conf</ulink> explicitly:</para>
 
@@ -142,12 +152,17 @@ ClientCertAuthentication = yes
   <warning>
     <para>Any client can generate certificates with arbitrary information, thus
       the client certificates must be checked for validity. Cockpit currently
-      accepts any client certificate and relies on sssd to verify their validity.
-      This is secure only when the entire certificate gets matched, i.e. when
-      importing the complete certificates into Identity Management as shown above.
-      <emphasis>Do not use this with local sssd <code>certmap</code> rules</emphasis>
-      which only match on Subject/Issuer properties!
-  </para>
+      accepts any client certificate and relies on sssd to verify their validity.</para>
+
+    <para>Check if your <command>sssd</command> version is at least 2.6.1, as earlier
+      versions did not validate the user certificate against the configured CA with
+      Cockpit logins. With earlier versions, this is secure only when the
+      entire certificate gets matched, i.e. when importing the complete
+      certificates into Identity Management as shown above. Also, certificate
+      revocations are <emphasis>not checked with earlier sssd versions</emphasis>.</para>
+
+    <para><emphasis>Do not use this with local sssd <code>certmap</code> rules</emphasis>
+      which only match on Subject/Issuer properties, if you run sssd earlier than 2.6.1!</para>
  </warning>
 
   <para>When enabling this mode,
diff --git a/src/ws/cockpit-session-client-certificate.c b/src/ws/cockpit-session-client-certificate.c
index de0b5a4..d0f9418 100644
--- a/src/ws/cockpit-session-client-certificate.c
+++ b/src/ws/cockpit-session-client-certificate.c
@@ -65,12 +65,30 @@ sssd_map_certificate (const char *certificate, char** username)
                           "org.freedesktop.sssd.infopipe",
                           "/org/freedesktop/sssd/infopipe/Users",
                           "org.freedesktop.sssd.infopipe.Users",
-                          "FindByCertificate",
+                          "FindByValidCertificate",
                           &err,
                           &user_obj_msg,
                           "s",
                           certificate);
 
+  /* fallback for sssd < 2.6.1; this is only secure for matching the full certificate, not mapping rules */
+  if (r < 0 && sd_bus_error_has_name (&err, "org.freedesktop.DBus.Error.UnknownMethod"))
+    {
+      debug ("FindByValidCertificate() method does not exist, falling back to FindByCertificate()");
+      sd_bus_error_free (&err);
+      err = SD_BUS_ERROR_NULL;
+
+      r = sd_bus_call_method (bus,
+                              "org.freedesktop.sssd.infopipe",
+                              "/org/freedesktop/sssd/infopipe/Users",
+                              "org.freedesktop.sssd.infopipe.Users",
+                              "FindByCertificate",
+                              &err,
+                              &user_obj_msg,
+                              "s",
+                              certificate);
+    }
+
   if (r < 0)
     {
       /* The error name is a bit confusing, and this is the common case; translate to readable error */
-- 
2.17.1

